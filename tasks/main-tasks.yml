# This rpmfusion__impl role is used to avoid duplicated code between the -free
# and -nonfree roles.  It simplifies maintenance and development.
#
# nonfree requires free to be enabled; the dependency is handled in the
# nonfree role.
#
# You could have a single role with a variable to control whether the nonfree
# repo is enabled.  However that method generates "a lot of ‘skipped’ output".
#
# I think the skipped output is possible to avoid using a loop - of an include
# task.  However "dynamic includes" seem to be quite magical beasts.  I
# actually tried but didn't manage to work it out :).  Also, "tasks which only
# exist inside a dynamic include will not show up in --list-tasks output".
# Remember `--check` mode is not a fully dry run, making it "less useful ...
# if you have steps that use conditionals that depend on the results of prior
# commands".  You can find an example of that in the tasks below.

- name: Check variable <repo> - "free" or "nonfree"
  assert:
    that:
      - repo is defined
      - repo == "free" or repo == "nonfree"
    msg: Did you use rpmfusion__impl directly?
         Please use sourcejedi.rpmfusion-free and/or
         sourcejedi.rpmfusion-nonfree instead.

# The role which pulled us in won't be shown, not yet.
# Clarify which one it was.
- name: Now installing <repo>
  debug:
    var: repo

- name: Check OS is Fedora
  assert:
    that: ansible_distribution == 'Fedora'


# Official rpmfusion instructions are a one-time process, which
# installs the rpmfusion release package.  I found a problem when I
# adapted that directly:
#
# The rpmfusion release package may be updated within a release, and
# the instructions don't account for this.  I guess they assume a
# subsequent update at some point.  But after the update, the specific
# release RPM that we downloaded will no longer be installed... and
# this role will want to downgrade it!
#
# The instructions are purely a bootstrap towards installing the
# rpmfusion release package. So I think we can use the obvious
# workaround without losing anything (it might even improve
# performance).

- name: rpmfusion release is already installed
  package:
    name: rpmfusion-{{ repo }}-release
    state: present
  check_mode: yes
  ignore_errors: yes
  register: install_idempotent

- include: install-nonidempotent.yml
  static: yes
  when: install_idempotent.failed or install_idempotent.changed

- include: update_master_keys.yml
  # I tried "static: no", so these tasks would not show up even as "skipped".
  # but then the include task shows up, *even when running a different tag*.
  # (ansible-2.6.3-1.fc28.noarch).
  static: yes
  when: rpmfusion__update_master_keys
