# Signing keys: https://rpmfusion.org/keys
#
# Notice RPMFusion supports secure upgrades between versions of Fedora.
# It will be possible to update this role's copy of the keys accordingly.
# Equally, if you already installed RPMFusion you could cross-check the keys.
#
- name: Copy signing keys
  copy:
    src: "{{ item }}"
    dest: /ansible-managed/rpmfusion/
  with_items:
    - rpm-gpg
    - fingerprints

# Ansible copy module does not preserve executable bit (unlike `cp`).
#
- name: Copy script for checking key fingerprints
  copy:
    src: "{{ item }}"
    dest: /ansible-managed/rpmfusion/
    mode: a+x
  with_items:
    - keyfile_to_fingerprints.sh

- name: Install gpg
  package: name=gpg state=present

# This role also includes fingerprints of the keys.
#
- name: Our key file matches our list of fingerprints
  shell: VER={{ ansible_distribution_major_version|int }};
         KEY=RPM-GPG-KEY-rpmfusion-{{ repo }}-fedora-"$VER";
         ./keyfile_to_fingerprints.sh rpm-gpg/"$KEY" |
         diff -u fingerprints/"$KEY" /dev/stdin
  args:
    chdir: /ansible-managed/rpmfusion/
  changed_when: False
  check_mode: False

- name: Import signing key
  rpm_key:
    key: /ansible-managed/rpmfusion/rpm-gpg/RPM-GPG-KEY-rpmfusion-{{ repo }}-fedora-{{ ansible_distribution_major_version }}
    state: present
  register: import_key

# sourcejedi.rpmfusion_remove relies on descriptions to remove keys, because
# I don't know whether we're guaranteed to know all the installed RPM Fusion
# key IDs.  Check that this works for the key we just installed.
- name: Check description of installed signing key
  shell: FPRINT="$(cat /ansible-managed/rpmfusion/fingerprints/RPM-GPG-KEY-rpmfusion-{{ repo }}-fedora-{{ ansible_distribution_major_version }})" &&
         KEYID="$(echo "$FPRINT" | tr "A-F" "a-f" | tr -d ' \r\n' | tail --bytes 8 )" &&
         rpm -qa gpg-pubkey --qf "%{version}-%{release} %{summary}\n" | grep "gpg[(]RPM Fusion {{ repo }}" | grep "$KEYID"
  check_mode: False
  changed_when: False

- name: Download rpmfusion release RPM
  get_url:
    url: "https://download1.rpmfusion.org/{{ repo }}/fedora/rpmfusion-{{ repo }}-release-{{ ansible_distribution_major_version }}.noarch.rpm"
    dest: /ansible-managed/rpmfusion/

- name: Verify rpmfusion release RPM
  command: rpm --checksig rpmfusion-{{ repo }}-release-{{ ansible_distribution_major_version }}.noarch.rpm
  args:
    chdir: /ansible-managed/rpmfusion/
    warn: no  # can't use ansible dnf module, it does not implement this
  changed_when: False
  check_mode: False

- name: Install rpmfusion release RPM
  package:
    name: /ansible-managed/rpmfusion/rpmfusion-{{ repo }}-release-{{ ansible_distribution_major_version }}.noarch.rpm
    state: present
  register: install

# This test may be slow, only bother when changed.
# (In which case, the next use of dnf would probably have had to do this anyway).
# Do not defer this, as other roles may add more drop-in configs.
- name: Test "dnf check-update"
  when: install.changed or import_key.changed
  command: dnf \
           --disablerepo="*" --enablerepo=rpmfusion-{{ repo }}
           check-update
  register: dnf_check_update
  # exit status is 0 on success, 100 if updates available (otherwise 100)
  failed_when: dnf_check_update.rc not in [0, 100]
  args:
    warn: no  # can't use ansible dnf module, it does not implement this

# Repo may have an updated version.
# See also comment in main-tasks.yml
- name: Upgrade rpmfusion release package
  package:
    name: rpmfusion-{{ repo }}-release
    state: latest
